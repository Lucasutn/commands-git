Comandos de Udemy

git -- version
git help
clear
git config --gloabal user.name "Lucas"
git config --global -e (registro de modificiacion..)
ls (en que carpeta me encuentro)
ls -al (informacion itde las carpetas)
cd (moverse a otra carpeta)
git init (crear repositorio)
git status (estado de los archivos)
pwd (muestra la dirreciion de la carpeta en la que me encuentro)
git add . (agrega todos los archivos)
git commit -m "Mensaje"(guarda el proyecto como se encuentra actualmente )
git checkout --  .(recupera los cambios)
git log
git add -A (agrega todos los archivos que no fueron modificados)
git resset *.xml (para sacar excluir todos los archivos que estan en el stage)
git log --oneline
git log --oneline --decorate --all --graph

$ git config --global alias.lg "log --oneline --decorate --all --graph" (asigna
 una funcioncion a la palabra lg)

mkdir proyecto1
touch vacio.txt
cat 
rm vacio.txt
ls --la

git rm --chached historia

git config --list --show-origin

git show historia.txt(ver los cambios en el archivo)





///////////*//////*/////////////*/////////////*//////////////*////////////*///////////*///////////




El origin"" se llama comandos(git push comandos master)


ls
ls -al
pwd
cd
mkdir (crea una carpeta)
touch vacio.txt(crea archivos vacios)

cat vacio.txt (Muestra el contenido de un archivo)

rm vacio.txt (borra un archivo)

rm --help

git rm --cached historia.txt

git config --list
git config --list --show-origin
git config --global user.name "Lucas"
git config --global user.email " lucas@hotmail.com"

git diff 

git reset c8a367d0882c00dbc4d55a947f75918c5fbdb3a1 --hard
git reset c8a367d0882c00dbc4d55a947f75918c5fbdb3a1 --soft


git checkout

git log --stat

 git commit -am

git branch cabecera

git checkout cabecera

git branch

git merge cabecera

$ git remote add origin https://github.com/Lucasutn/hyperblog.git

git remote

git remote -v

git push origin master

$ git pull origin master

git pull origin master --allow-unrelated-histories

$ ssh-keygen -t rsa -b 4096 -C "lucashnutn@gmail.com"

eval $(ssh-agent -s)

ssh-add ~/.ssh/id_rsa

git remote set-url origin  git@github.com:Lucasutn/hyperblog.git

git pull

git pull origin master

 git push origin master

git log --all --graph --decorate --oneline

alias registro="git log --all --graph --decorate --oneline" (esto es un alias con el nombre registro)

git tag -a v0.1 -m "Resusltado de las primeras clases del curso" e7a5c81 (al tag se le puede colocar un nombre en este caso v1.0)

git tag (para ver todos los tags)

git show-ref --tags (la forma de saber a que commit esta conectado el tag)

git push origin --tags(esto envia los tags a github)

git tag -d dormido (para borrrar un tag, dormido es el nombre del tag)

git push origin :refs/tags/dormido(borra el tag en github)

git show-branch (nos muestra cuales son las ramas que existen y su historia)

git show-branch --all (lo mismo pero con mas datos)

gitk (visual)

git push origin footer (para enviar las ramas)

git push origin cabecera

git clone https://github.com/Lucasutn/hyperblog.git

git config --get-regexp alias




